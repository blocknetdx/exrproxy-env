version: "3.9"

services:
{% for daemon in daemons %}
  {{ daemon.name }}:
    image: {{ daemon.image }}
    restart: unless-stopped
    expose:
      - {{ daemon.rpcPort }}
      - {{ daemon.p2pPort }}
{% if deploy_nevm and daemon.name == 'SYS' %}
      - 8545
      - 30303
{% endif %}
    ports:
      - "{{ daemon.p2pPort }}:{{ daemon.p2pPort }}"
    entrypoint: /opt/blockchain/start-{{ daemon.configName }}.sh
    command:
      - {{ daemon.binFile }}
    environment:
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      RPC_ALLOWIP: {{ subnet }}
    stop_signal: SIGINT
{% if daemon.name == 'SYS' %}
    stop_grace_period: 20m
{% else %}
    stop_grace_period: 10m
{% endif %}
    volumes:
      - {{ daemon.volume }}/{{ daemon.name }}/config:/opt/blockchain/config
      - {{ daemon.volume }}/{{ daemon.name }}/data:/opt/blockchain/data
    {% if daemon.chainstate is defined  %}
      - {{ daemon.chainstate }}/{{ daemon.name }}/data/chainstate:/opt/blockchain/data/chainstate
    {% endif %}
  - type: bind
        source: ./scripts/entrypoints/start-{{ daemon.configName }}.sh
        target: /opt/blockchain/start-{{ daemon.configName }}.sh
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      backend:
        ipv4_address: {{ daemon.ip }}
{% endfor %}

  {{ blocknet_node }}:
    image: {{ blocknet_image }}
    entrypoint: /opt/blockchain/start-{{ blocknet_node }}.sh
    restart: unless-stopped
    environment:
      PUBLIC_IP: "${PUBLIC_IP}"
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
{% if blocknet_node == 'snode' or blocknet_node == 'testsnode' %}
      SN_NAME: "${SN_NAME}"
      SN_ADDRESS: "${SN_ADDRESS}"
      SN_KEY: "${SN_KEY}"
{% endif %}
    stop_signal: SIGINT
    stop_grace_period: 10m
    volumes:
{% if blocknet_node == 'snode' %}
      - {{ snode_volume }}/snode/config:/opt/blockchain/config
      - {{ snode_volume }}/snode/data:/opt/blockchain/data
{% elif blocknet_node == 'tnode' %}
      - {{ tnode_volume }}/tnode/config:/opt/blockchain/config
      - {{ tnode_volume }}/tnode/data:/opt/blockchain/data
{% elif blocknet_node == 'testsnode' %}
      - {{ testsnode_volume }}/testsnode/config:/opt/blockchain/config
      - {{ testsnode_volume }}/testsnode/data:/opt/blockchain/data
{% elif blocknet_node == 'testtnode' %}
      - {{ testtnode_volume }}/testtnode/config:/opt/blockchain/config
      - {{ testtnode_volume }}/testtnode/data:/opt/blockchain/data
{% endif %}
      - type: bind
        source: ./scripts
        target: /opt/blockchain
      - type: bind
        source: ./plugins
        target: /opt/blockchain/data/plugins
      - type: bind
        source: ./scripts/config/xbridge.conf
        target: /opt/blockchain/data/xbridge.conf
{% if blocknet_node == 'snode' or blocknet_node == 'tnode' %}
    ports:
      - "41412:41412"
    expose:
      - 41412
{% elif blocknet_node == 'testsnode' or blocknet_node == 'testtnode' %}
    ports:
      - "41474:41474"
    expose:
      - 41474
{% endif %}
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      backend:
{% if blocknet_node == 'snode' %}
        ipv4_address: {{ snode_ip }}
{% elif blocknet_node == 'tnode' %}
        ipv4_address: {{ tnode_ip }}
{% elif blocknet_node == 'testsnode' %}
        ipv4_address: {{ testsnode_ip }}
{% elif blocknet_node == 'testtnode' %}
        ipv4_address: {{ testtnode_ip }}
{% endif %}

{% if deploy_avax %}
  avax:
    image: {{ avax_image }}
    restart: unless-stopped
    ports:
      - "9651:9651"
    expose:
      - 9650
      - 9651
    entrypoint: /avalanchego/build/avalanchego
    command:
      - --http-host=0.0.0.0
      - --index-enabled
      - --db-dir=/data
      - --public-ip={{ avax_public_ip }}
    volumes:
      - {{ avax_volume }}/AVAX:/data
    stop_signal: SIGINT
    stop_grace_period: 5m
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      backend:
        ipv4_address: {{ avax_ip }}
{% endif %}

{% if deploy_eth %}
{% if gethexternal is sameas false %}
  geth:
    image: {{ eth_image }}
    restart: unless-stopped
    expose:
      - 8545
      - 30303
    ports: 
      - "30303:30303"
    volumes:
      - {{ eth_volume }}/ETH:/chaindata
    stop_signal: SIGINT
    stop_grace_period: 5m
    command:
{% if eth_testnet %}
      - --{{ eth_testnet }}
      - --syncmode={{ syncmode }}
{% else %}
      - --gcmode=archive
      - --syncmode=full
{% endif %}
      - --nousb
      - --http
      - --http.api
      - "personal,eth,net,web3"
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api
      - "personal,eth,net,web3"
      - --graphql
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
      - --datadir
      - "/chaindata"
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      backend:
        ipv4_address: {{ geth_ip }}
{% endif %}
{% endif %}

{% if deploy_eth or deploy_avax or deploy_nevm %}
{% if deploy_payment %}
  payment:
    image: {{ payment_image }}
    restart: unless-stopped
    environment:
{% if deploy_eth %}
      ETH_HOST: {{ geth_ip }}
      ETH_PORT: 8545
      ETH_HOST_TYPE: http
{% endif %}
{% if deploy_avax %}
      AVAX_HOST: {{ avax_ip }}
      AVAX_PORT: 9650
      AVAX_HOST_TYPE: http
{% endif %}
{% if deploy_nevm %}
      NEVM_HOST: {{ nevm_ip }}
      NEVM_PORT: 8545
      NEVM_HOST_TYPE: http
{% endif %}
{% if avaxexternal %}
      AVAX_HOST: {{ avax_ip }}
      AVAX_PORT: 9650
      AVAX_HOST_TYPE: http
{% endif %}
      PAYMENT_AMOUNT_TIER1: {{ payment_tier1 }}
      PAYMENT_AMOUNT_TIER2: {{ payment_tier2 }}
      DISCOUNT_ABLOCK: {{ payment_discount_ablock }}
      DISCOUNT_AABLOCK: {{ payment_discount_aablock }}
      DISCOUNT_SYSBLOCK: {{ payment_discount_sysblock }}
      DB_HOST: {{ pg_ip }}
      DB_USERNAME: ethproxy
      DB_PASSWORD: password
      DB_DATABASE: eth
    expose:
      - 8080
    depends_on:
{% if deploy_eth %}
{% if gethexternal is sameas false %}
      - geth
{% endif %}
{% endif %}
{% if deploy_avax %}
      - avax
{% endif %}
{% if deploy_nevm %}
      - SYS
{% endif %}
      - payment_db
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      backend:
        ipv4_address: {{ payment_ip }}

  payment_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: eth
      POSTGRES_USER: ethproxy
      POSTGRES_PASSWORD: password
    volumes:
      - {{ payment_volume }}/eth_pymt_db:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      backend:
        ipv4_address: {{ pg_ip }}
{% endif %}
{% endif %}

  xr_proxy:
    image: {{ xr_proxy_image }}
    entrypoint: /opt/scripts/start-xrproxy.sh
    restart: unless-stopped
    ports: 
      - "80:80"
    expose:
      - 80
    environment:
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_KEY: "${SN_KEY}"
{% if deploy_eth %}
      GETH_HOST: {{ geth_ip }}
      ETH_HOST: http://{{ geth_ip }}:8545
      ETH_HOST_USER:
      ETH_HOST_PASS:
      ETH_HOST_DISALLOWED_METHODS: eth_accounts,db_putString,db_getString,db_putHex,db_getHex
{% endif %}
{% if deploy_avax %}
      AVAX_HOST: {{ avax_ip }}
      AVAX_IP: 9650
{% endif %}
{% if deploy_nevm %}
      NEVM_HOST: {{ nevm_ip }}
      NEVM_IP: 8545
{% endif %}
{% if deploy_eth or deploy_avax or deploy_nevm %}
{% if deploy_payment %}
      PAYMENT_PROCESSOR_HOST: {{ payment_ip }}:8080
      DB_HOST: {{ pg_ip }}
      DB_USERNAME: ethproxy
      DB_PASSWORD: password
      DB_DATABASE: eth
{% endif %}
{% endif %}
{% if deploy_xquery %}
      #XQUERY_HOST: http://{{ reverse_proxy_ip }}:{{ reverse_proxy_port}}
{% endif %}
    volumes:
      - {{ xr_proxy_volume }}/xr_proxy/config:/opt/uwsgi/conf
      - {{ xr_proxy_volume }}/xr_proxy/nginx:/etc/nginx/conf.d
      - type: bind
        source: ./scripts
        target: /opt/scripts
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      frontend:
      backend:
        ipv4_address: {{ xr_proxy_ip }}

{% if False %}
#### EXCLUDE_FROM_VARIABLE_INFER ####
{% endif %}

{% if deploy_xquery %}
#### START XQUERY STACK ####

{% include 'autobuild/templates/xquery.j2' %}


#### END XQUERY STACK ####
{% endif %}

{% if deploy_utxo %}
#### START UTXO STACK ####

{% include 'autobuild/templates/utxo.j2' %}


#### END UTXO STACK ####
{% endif %}

{% if False %}
#### EXCLUDE_FROM_VARIABLE_INFER ####
{% endif %}

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.41.0.0/24
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: {{ subnet }}
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
